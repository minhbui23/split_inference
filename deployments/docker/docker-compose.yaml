version: '3.8' # Sử dụng phiên bản hỗ trợ depends_on.condition

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine # Sử dụng alpine image cho nhẹ hơn
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ main port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      # Đảm bảo đường dẫn này chính xác so với vị trí file docker-compose.yaml
      - ../../rabbitmq-config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ../../rabbitmq-config/limits.conf:/etc/security/limits.conf
    networks:
      - si_network
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "3GB"
    healthcheck: # Thêm healthcheck cho RabbitMQ
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - si_network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "5GB"
    healthcheck: # Thêm healthcheck cho Redis
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  server:
    image: minhbui1/server-infer:v2.0
    container_name: server
    depends_on:
      rabbitmq:
        condition: service_healthy 
      redis:
        condition: service_healthy 
    volumes:
      # Đường dẫn mount: host_path:container_path
      # Giả sử config.yaml trên host là ../../configs/config.yaml và được mount vào /app/configs/config.yaml trong container
      - ../../configs/config.yaml:/app/configs/config.yaml  
      - ../../logs:/app/logs
      - ../../models:/app/models # Nếu server cần truy cập trực tiếp file model
    networks:
      - si_network
    # Đường dẫn --config trỏ đến vị trí file config trong container
    command: ["sh", "-c", "sleep 5 && python -u server.py --config /app/configs/config.yaml"]
    environment:
      RABBITMQ_HOST: rabbitmq # Server sẽ dùng tên service để kết nối
      REDIS_HOST: redis

  client11: # Client Edge
    image: minhbui1/client-infer:v2.0
    container_name: client11
    depends_on:
      - server
    volumes:
      - ../../configs/config.yaml:/app/configs/config.yaml  
      - ../../logs:/app/logs
      - ../../videos/video.mp4:/app/video.mp4 
    networks:
      - si_network
    command: ["sh", "-c", "sleep 10 && python client.py --layer_id 1 --device cpu --config /app/configs/config.yaml"] 
    deploy:
      resources:
        limits:
          cpus: "6"
          memory: "6GB"

  # client12: # Client Edge
  #   image: minhbui1/client-infer:v2.0
  #   container_name: client12
  #   depends_on:
  #    - server
  #   volumes:
  #     - ../../configs/config.yaml:/app/configs/config.yaml  
  #     - ../../logs:/app/logs
  #     - ../../videos/video.mp4:/app/video.mp4 
  #   networks:
  #     - si_network
  #   command: ["sh", "-c", "sleep 200 && python client.py --layer_id 1 --device cpu --config /app/configs/config.yaml"] 
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "6"
  #         memory: "6GB"

  client21: # Client Cloud
    image: minhbui1/client-infer:v2.0
    container_name: client21
    depends_on:
      - server
    volumes:
      - ../../configs/config.yaml:/app/configs/config.yaml  
      - ../../logs:/app/logs
    networks:
      - si_network
    command: ["sh", "-c", "sleep 10 && python client.py --layer_id 2 --device cpu --config /app/configs/config.yaml"]
    deploy:
      resources:
        limits:
          cpus: "6"
          memory: "6GB"

  # client22: # Client Cloud
  #   image: minhbui1/client-infer:v2.0
  #   container_name: client22
  #   depends_on:
  #     - server
  #   volumes:
  #     - ../../configs/config.yaml:/app/configs/config.yaml  
  #     - ../../logs:/app/logs
  #   networks:
  #     - si_network
  #   command: ["sh", "-c", "sleep 230 && python client.py --layer_id 2 --device cpu --config /app/configs/config.yaml"]
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "3"
  #         memory: "4GB"

  # =====  PUMBA CONTAINER =====
  pumba11:
    image: gaiaadm/pumba:latest
    container_name: pumba11

    command: [
      "netem",
      "--duration", "1h",  
      "delay", "--time", "5", 
      "--jitter", "2",       
      "loss", "--percent", "0.1", 
      "rate", "--rate", "500mbit",
      "client11"          
    ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
    networks:
      - si_network 
    depends_on:
      client11: 
        condition: service_started 
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "128MB"

  # pumba12:
  #   image: gaiaadm/pumba:latest
  #   container_name: pumba12

  #   command: [
  #     "netem",
  #     "--duration", "1h",  
  #     "delay", "--time", "5", 
  #     "--jitter", "2",       
  #     "loss", "--percent", "0.1", 
  #     "rate", "--rate", "500mbit",
  #     "client12"          
  #   ]
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock 
  #   networks:
  #     - si_network 
  #   depends_on:
  #     client12: 
  #       condition: service_started 
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.2"
  #         memory: "128MB"
  # ==============================

  metrics-collector:
    image: minhbui1/metric-collector
    container_name: metrics_collector
    depends_on:
      - rabbitmq 
    volumes:
      - ../../result:/collector/output 
    environment:
      RABBITMQ_MONITOR_HOST: rabbitmq 
      RABBITMQ_MONITOR_PORT: 15672
      RABBITMQ_MONITOR_USER: admin  
      RABBITMQ_MONITOR_PASS: admin  
      RABBITMQ_MONITOR_VHOST_ENCODED: '%2F' 
      METRICS_CSV_FILENAME: /collector/output/rabbitmq_queue_stats.csv 
      METRICS_POLL_INTERVAL: 5
    networks:
      - si_network 
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "128MB"

  
volumes:
  rabbitmq_data:
  redis_data:

networks:
  si_network:
    driver: bridge
